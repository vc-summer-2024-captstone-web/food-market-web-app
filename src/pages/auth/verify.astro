---
import AuthLayout from '@layouts/AuthLayout.astro';
import FormInput from '@components/FormInput.astro';
import { db, eq, EmailVerification, User } from 'astro:db';
if (!Astro.locals.user) {
  return Astro.redirect('/');
}
const user = Astro.locals.user;
let error = '';
if (user && user.verified) {
  return Astro.redirect('/');
}

const { id } = user;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const token = formData.get('token') as string;
  let emailVerification = await db
    .select()
    .from(EmailVerification)
    .where(eq(EmailVerification.token, token) && eq(EmailVerification.userId, id))
    .then((result) => {
      return result[0];
    });
  console.log({ emailVerification });

  if (!emailVerification) {
    error = 'Invalid token';
    return;
  }
  if (new Date().valueOf() > emailVerification.expiresAt) {
    error = 'Token expired';
    // Todo: send new verification email
  } else {
    await db.update(User).set({ verified: true }).where(eq(User.id, id));
    await db.delete(EmailVerification).where(eq(EmailVerification.token, token));
    Astro.redirect('/');
  }
}
---

<AuthLayout title='Email Verification'>
  {error && <p id='error'>{error}</p>}
  {
    error === 'Token expired' && (
      <button
        onclick="fetch('/api/auth/verify', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
        })
          .then((res) => {
            if (!res.ok) {
              throw new Error('Bad status code from server.');
            }
            return res.json();
          })
          .then((data) => {

            console.log(data);
          });
        document.querySelector('#error').remove();
        this.remove();
        "
      >
        Request a new token
      </button>
    )
  }
  <h1>Email Verification</h1>
  <form method='POST' class='form--auth'>
    <FormInput type='text' label='Verification token' name='token' required={true} />
    <button type='submit'>Verify</button>
  </form>
</AuthLayout>
